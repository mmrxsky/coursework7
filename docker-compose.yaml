version: '3.8'

services:

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "python manage.py collectstatic --noinput && 
                    python manage.py migrate && 
                    python manage.py runserver 0.0.0.0:8000"

  celery:
    build: .
    restart: unless-stopped
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
    command: celery -A config worker -l INFO
    healthcheck:
      test: ["CMD-SHELL", "celery -A config inspect ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  celery-beat:
    build: .
    restart: unless-stopped
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - celery
    command: celery -A config beat -l INFO

volumes:
  pg_data:
  redis_data:
  static_volume:
  media_volume: